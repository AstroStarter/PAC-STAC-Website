---
import chunks from "@lib/chunks.js";
import request from "@lib/request.js";

const DARK_STYLE = "&color=black&logoColor=white&labelColor=black&logoWidth=15";
const LIGHT_STYLE =
	"&color=white&logoColor=black&labelColor=white&logoWidth=15";

const { packages } = Astro.props;

interface Badges {
	img: string;
	link: string;
}

interface PackagesRowItem {
	name: string;
	link: string;
	github: string;
	description: string;
	badges: Set<Badges>;
}

let newPackages = new Set<PackagesRowItem>();

for (const _package of packages) {
	if (_package.match(/npm:/)) {
		const packageScopeName = _package.split(":")[1];
		const packageJson = await (
			await fetch(`https://registry.npmjs.org/${packageScopeName}`)
		).json();

		const githubOwnerRepo = packageJson.homepage
			.replace(/(git\+)?http?s:\/\/github.com\//, "")
			.replace("#readme", "");

		newPackages.add({
			link: packageJson.homepage,
			name: packageJson.name,
			github: githubOwnerRepo,
			description: packageJson.description,
			badges: new Set([
				{
					img: `https://img.shields.io/github/workflow/status/${githubOwnerRepo}/Node?label=Build&logo=node.js${DARK_STYLE}`,
					link: `${packageJson.homepage}/actions/workflows/node.yml`,
				},
				{
					link: `https://npmjs.org/${packageJson.name}`,
					img: `https://img.shields.io/npm/v/${packageJson.name}?label=version&logo=npm${DARK_STYLE}`,
				},
				{
					link: `https://npmjs.org/${packageJson.name}`,
					img: `https://img.shields.io/librariesio/release/npm/${packageJson.name}?label=dependencies&logo=dependabot${DARK_STYLE}`,
				},
				{
					link: `https://npmjs.org/${packageJson.name}`,
					img: `https://img.shields.io/npm/dw/${packageJson.name}?label=downloads&logo=npm${DARK_STYLE}`,
				},
			]),
		});
	}

	if (_package.match(/github:/)) {
		const githubOwnerRepo = _package.split(":")[1];
		const githubOwner = githubOwnerRepo.split("/")[0];
		const githubRepo = githubOwnerRepo.split("/")[1];

		const githubJson = (
			await request(`GET /repos/${githubOwnerRepo}`, {
				owner: githubOwner,
				repo: githubRepo,
			})
		).data;

		newPackages.add({
			link: githubJson.html_url,
			name: githubJson.name,
			github: githubJson.full_name,
			description: githubJson.description,
			badges: new Set(),
		});
	}
}
---

{
	[...chunks(Array.from(newPackages), 2)].map((packageRow) => (
		<>
			<tr>
				{packageRow.map((_package) => {
					let colspan = packageRow.length > 1 ? 2 : 4;
					colspan -= _package.badges.size >= 1 ? 1 : 0;

					return (
						<>
							{_package.badges.size >= 1 ? (
								<td valign="top" colspan={colspan}>
									<br />
									{Array.from(_package.badges).map(
										(badge) => (
											<>
												<a href={badge.link}>
													<img src={badge.img} />
												</a>
												<br />
											</>
										)
									)}
									<br />
								</td>
							) : (
								""
							)}
							<td valign="top" colspan={colspan}>
								<br />
								<a href={_package.link}>
									<img
										src={`https://img.shields.io/github/stars/${_package.github}?label=stars&logo=github${DARK_STYLE}`}
									/>
								</a>
								<br />
								<a href={_package.link}>
									<b>{_package.name}</b>
								</a>
								<br />
								<b
									set:html={_package.description
										?.split(".")
										?.join(".<br />")}
								/>
							</td>
						</>
					);
				})}
			</tr>
		</>
	))
}
